pipeline {
    agent any

    environment {
        WORK_DIR = "frontend"
        IMAGE_TAG = ""
        DOCKER_IMAGE_NAME = "aedudon/taskingai-frontend"
        DOCKER_CREDENTIALS_ID = 'docker-hub'
    }

    options {
        // Chỉ kích hoạt pipeline khi có thay đổi trong thư mục frontend/
        skipDefaultCheckout()
    }

    stages {
        stage('Checkout Code') {
            steps {
                // Lấy mã nguồn từ repository
                script {
                    // Kiểm tra có thay đổi nào trong thư mục frontend hay không
                    def changes = checkout(scm)
                    echo "Detected changes: ${changes.collect { it.path }}"
                    def frontendChanges = changes.findAll { it.path.startsWith(WORK_DIR + '/') }
                
                    if (frontendChanges.isEmpty()) {
                        currentBuild.result = 'NOT_BUILT'
                        error("No changes detected in frontend/ directory, skipping pipeline.")
                    } 
                }
            }
        }

        stage('Read Version') {
            steps {
                dir(WORK_DIR) {
                    script {
                        def packageJson = readJSON file: 'package.json'
                        IMAGE_TAG = packageJson.version
                        env.IMAGE_TAG = IMAGE_TAG // Đặt IMAGE_TAG cho các bước sau
                    }
                }
            }
        }

        // stage('Run Tests') {
        //     steps {
        //         dir(WORK_DIR) {
        //             // Chạy test cho frontend
        //             script {
        //                 docker.image('node:18').inside {
        //                     sh 'npm install'
        //                     sh 'npm test'
        //                 }
        //             }
        //         }
        //     }
        // }

        stage('Build Docker Image') {
            steps {
                dir(WORK_DIR) {
                    script {
                        // Build Docker image với tag phiên bản từ package.json
                        sh "docker build -t ${DOCKER_IMAGE_NAME}:${IMAGE_TAG} ."
                    }
                }
            }
        }

        stage('Push Docker Image to DockerHub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-hub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin'
                        sh "docker tag ${DOCKER_IMAGE_NAME}:${IMAGE_TAG} ${DOCKER_IMAGE_NAME}:${IMAGE_TAG}"
                        sh "docker push ${DOCKER_IMAGE_NAME}:${IMAGE_TAG}"
                    }
                }
                sh "docker image rm ${DOCKER_IMAGE_NAME}:${IMAGE_TAG}"
            }
        }

        stage('Deploy to Server') {
            steps {
                sshagent(credentials: ['jenkins-ssh-key']) {
                    sh "ssh -o StrictHostKeyChecking=no -i jenkins-ssh-key jenkins@125.212.231.31 'cd /home/jenkins/TaskingAI/docker && ./deploy.sh'"
                }
            }
        }
    }

    post {
        always {
            cleanWs() // Dọn dẹp workspace sau khi pipeline kết thúc
        }
        success {
            echo 'Frontend deployment successful!'
        }
        failure {
            echo 'Frontend deployment failed!'
        }
    }
}